/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function slint_mock_elapsed_time(a: number): void;
export function slint_get_mocked_time(): number;
export function slint_send_mouse_click(a: number, b: number, c: number): void;
export function slint_send_keyboard_char(a: number, b: number, c: number): void;
export function send_keyboard_string_sequence(a: number, b: number): void;
export function __wbg_compilationresult_free(a: number, b: number): void;
export function compilationresult_component(a: number): number;
export function compilationresult_diagnostics(a: number): number;
export function compilationresult_error_string(a: number): Array;
export function compile_from_string(a: number, b: number, c: number, d: number, e: number): number;
export function compile_from_string_with_style(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function __wbg_wrappedcompiledcomp_free(a: number, b: number): void;
export function wrappedcompiledcomp_run(a: number, b: number, c: number): void;
export function wrappedcompiledcomp_create(a: number, b: number, c: number): Array;
export function wrappedcompiledcomp_create_with_existing_window(a: number, b: number): Array;
export function __wbg_wrappedinstance_free(a: number, b: number): void;
export function wrappedinstance_show(a: number): Array;
export function wrappedinstance_hide(a: number): Array;
export function run_event_loop(): Array;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_export_3: WebAssembly.Table;
export function closure136_externref_shim(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h35d247a46a62b250(a: number, b: number): void;
export function closure665_externref_shim(a: number, b: number, c: number): void;
export function closure672_externref_shim(a: number, b: number, c: number, d: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __externref_table_alloc(): number;
export function __externref_table_dealloc(a: number): void;
export function __wbindgen_start(): void;
