(function() {
    var type_impls = Object.fromEntries([["slint",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-u64\" class=\"impl\"><a href=\"#impl-Ceil-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Ceil for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ceil</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Rounds to the smallest integer equal or greater than the original value. <a>Read more</a></div></details></div></details>","Ceil","slint::wgpu_26::wgpu::wgc::SubmissionIndex","slint::wgpu_26::wgpu::hal::FenceValue","slint::wgpu_26::wgpu::BufferAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#impl-Euclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#67\">Source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; (Self, Self)</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\">Read more</a></div></details></div></details>","Euclid","slint::wgpu_26::wgpu::wgc::SubmissionIndex","slint::wgpu_26::wgpu::hal::FenceValue","slint::wgpu_26::wgpu::BufferAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-u64\" class=\"impl\"><a href=\"#impl-Floor-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Floor for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">floor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Rounds to the biggest integer equal or lower than the original value. <a>Read more</a></div></details></div></details>","Floor","slint::wgpu_26::wgpu::wgc::SubmissionIndex","slint::wgpu_26::wgpu::hal::FenceValue","slint::wgpu_26::wgpu::BufferAddress"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-u64\" class=\"impl\"><a href=\"#impl-Round-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Round for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">round</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Rounds to the nearest integer value. <a>Read more</a></div></details></div></details>","Round","slint::wgpu_26::wgpu::wgc::SubmissionIndex","slint::wgpu_26::wgpu::hal::FenceValue","slint::wgpu_26::wgpu::BufferAddress"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6263]}